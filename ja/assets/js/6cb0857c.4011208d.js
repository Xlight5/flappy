"use strict";(self.webpackChunk_pleisto_flappy_docs=self.webpackChunk_pleisto_flappy_docs||[]).push([[146],{2599:(e,n,t)=>{t.d(n,{Z:()=>l});t(7378);var a=t(7140);const i={tabItem:"tabItem_wHwb"};var s=t(4246);function l(e){let{children:n,hidden:t,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.Z)(i.tabItem,l),hidden:t,children:n})}},8447:(e,n,t)=>{t.d(n,{Z:()=>w});var a=t(7378),i=t(7140),s=t(9169),l=t(3620),r=t(9749),o=t(8981),c=t(56),d=t(8796);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:i}}=e;return{value:n,label:t,attributes:a,default:i}}))}(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const i=(0,l.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,s=h(e),[l,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[c,u]=f({queryString:t,groupId:i}),[g,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,d.Nk)(t);return[i,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:i}),y=(()=>{const e=c??g;return p({value:e,tabValues:s})?e:null})();(0,r.Z)((()=>{y&&o(y)}),[y]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),m(e)}),[u,m,s]),tabValues:s}}var m=t(362);const y={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};var v=t(4246);function b(e){let{className:n,block:t,selectedValue:a,selectValue:l,tabValues:r}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),d=e=>{const n=e.currentTarget,t=o.indexOf(n),i=r[t].value;i!==a&&(c(n),l(i))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:r.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>o.push(e),onKeyDown:u,onClick:d,...s,className:(0,i.Z)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:i}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function j(e){const n=g(e);return(0,v.jsxs)("div",{className:(0,i.Z)("tabs-container",y.tabList),children:[(0,v.jsx)(b,{...e,...n}),(0,v.jsx)(x,{...e,...n})]})}function w(e){const n=(0,m.Z)();return(0,v.jsx)(j,{...e,children:u(e.children)},String(n))}},5434:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var a=t(4246),i=t(1670),s=t(8447),l=t(2599);const r={sidebar_position:2},o="\u306f\u3058\u3081\u306b",c={id:"quick-start",title:"\u306f\u3058\u3081\u306b",description:"\u26a0\ufe0f \u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u73fe\u5728\u958b\u767a\u4e2d\u3067\u3059\u3002Flappy\u306e\u521d\u7248\u3092\u3067\u304d\u308b\u3060\u3051\u65e9\u304f\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u305f\u3081\u306b\u3001\u4e00\u751f\u61f8\u547d\u306b\u4f5c\u696d\u3057\u3066\u3044\u307e\u3059\u3002\u304a\u697d\u3057\u307f\u306b\uff01\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u30b3\u30fc\u30c9\u4f8b\u306f\u8fd1\u65e5\u516c\u958b\u4e88\u5b9a\u3067\u3059\u3002",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/quick-start.mdx",sourceDirName:".",slug:"/quick-start",permalink:"/ja/docs/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quick-start.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docSidebar",previous:{title:"\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3",permalink:"/ja/docs/"},next:{title:"Synthesized Function",permalink:"/ja/docs/sythesized-function"}},d={},u=[{value:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",id:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",level:2},{value:"LLM\u30a2\u30c0\u30d7\u30bf\u30fc\u306e\u4f5c\u6210",id:"llm\u30a2\u30c0\u30d7\u30bf\u30fc\u306e\u4f5c\u6210",level:2},{value:"\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5b9a\u7fa9",id:"\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5b9a\u7fa9",level:2},{value:"\u4e3b\u8981\u306a\u6982\u5ff5",id:"\u4e3b\u8981\u306a\u6982\u5ff5",level:3},{value:"\u95a2\u6570",id:"\u95a2\u6570",level:4},{value:"\u30b3\u30fc\u30c9\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf",id:"\u30b3\u30fc\u30c9\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf",level:4},{value:"Call your agent",id:"call-your-agent",level:2},{value:"Create and execute a action plan",id:"create-and-execute-a-action-plan",level:3},{value:"Call synthesized function directly",id:"call-synthesized-function-directly",level:3},{value:"Call Code Interpreter",id:"call-code-interpreter",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"\u306f\u3058\u3081\u306b",children:"\u306f\u3058\u3081\u306b"}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsx)(n.p,{children:"\u26a0\ufe0f \u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u73fe\u5728\u958b\u767a\u4e2d\u3067\u3059\u3002Flappy\u306e\u521d\u7248\u3092\u3067\u304d\u308b\u3060\u3051\u65e9\u304f\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u305f\u3081\u306b\u3001\u4e00\u751f\u61f8\u547d\u306b\u4f5c\u696d\u3057\u3066\u3044\u307e\u3059\u3002\u304a\u697d\u3057\u307f\u306b\uff01\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u30b3\u30fc\u30c9\u4f8b\u306f\u8fd1\u65e5\u516c\u958b\u4e88\u5b9a\u3067\u3059\u3002"})}),"\n",(0,a.jsx)(n.p,{children:"Flappy\u306f\u3001LLM\u30d9\u30fc\u30b9\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8/\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u4f9d\u5b58\u3057\u306a\u3044SDK\u3067\u3059\u3002\u59cb\u3081\u308b\u306b\u306f\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b\u8a00\u8a9e\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(n.h2,{id:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",children:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"}),"\n",(0,a.jsxs)(s.Z,{children:[(0,a.jsx)(l.Z,{value:"nodejs",label:"NodeJS (TypeScript)",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install @plesito/node-flappy@next\n# or yarn add @pleisto/node-flappy@next\n"})})}),(0,a.jsxs)(l.Z,{value:"java",label:"Java",default:!0,children:[(0,a.jsx)(n.p,{children:"Maven"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>com.pleisto</groupId>\n    <artifactId>flappy</artifactId>\n    <version>0.0.7</version>\n</dependency>\n"})}),(0,a.jsx)(n.p,{children:"Gradle"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"implementation 'com.pleisto:flappy:0.0.7'\n"})})]}),(0,a.jsx)(l.Z,{value:"kotlin",label:"Kotlin",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'implementation("com.pleisto:flappy:0.0.7")\n'})})}),(0,a.jsx)(l.Z,{value:"csharp",label:"C#",default:!0,children:(0,a.jsx)(n.p,{children:"Coming soon"})})]}),"\n",(0,a.jsx)(n.h2,{id:"llm\u30a2\u30c0\u30d7\u30bf\u30fc\u306e\u4f5c\u6210",children:"LLM\u30a2\u30c0\u30d7\u30bf\u30fc\u306e\u4f5c\u6210"}),"\n",(0,a.jsxs)(n.p,{children:["Flappy\u306f\u3001OpenAI\u306eChatGPT\u3084hugingface\u306etransformers\u306a\u3069\u3001\u8907\u6570\u306eLLM\u5b9f\u88c5\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001",(0,a.jsx)(n.code,{children:"LLMBase"})," \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u3001\u81ea\u5206\u81ea\u8eab\u306eLLM\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002"]}),"\n",(0,a.jsxs)(s.Z,{children:[(0,a.jsx)(l.Z,{value:"nodejs-chatgpt",label:"NodeJS (TypeScript) with ChatGPT",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// you need to manually install `openai` package.\nimport { env } from 'node:process'\nimport OpenAI from 'openai'\nimport { ChatGPT } from '@pleisto/node-flappy'\n\nconst chatGpt = new ChatGPT(\n  new OpenAI({\n    apiKey: env.OPENAI_API_KEY!,\n    baseURL: env.OPENAI_API_BASE!\n  }),\n  'gpt-3.5-turbo'\n)\n"})})}),(0,a.jsx)(l.Z,{value:"nodejs-baichuan",label:"NodeJS (TypeScript) with Baichuan-53B API",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { env } from 'node:process'\nimport { Baichuan } from '@pleisto/node-flappy'\n\nconst chatGpt = new Baichuan(\n {\n  baichuan_api_key: env.BAICHUAN_API_KEY!,\n  baichuan_secret_key: env.BAICHUAN_SECRET_KEY!,\n }\n)\n"})})}),(0,a.jsx)(l.Z,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'    Dotenv dotenv = Dotenv.load();\n    ChatGPT llm = new ChatGPT("gpt-3.5-turbo", new ChatGPT.ChatGPTConfig(dotenv.get("OPENAI_TOKEN"), dotenv.get("OPENAI_API_BASE")));\n'})})}),(0,a.jsx)(l.Z,{value:"kotlin",label:"Kotlin",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'  val dotenv = dotenv()\n\n  val chatGPT = ChatGPT(\n    model = "gpt-3.5-turbo",\n    chatGPTConfig = ChatGPT.ChatGPTConfig(token = dotenv["OPENAI_TOKEN"], host = dotenv["OPENAI_API_BASE"])\n  )\n'})})}),(0,a.jsx)(l.Z,{value:"csharp",label:"C#",default:!0,children:(0,a.jsx)(n.p,{children:"Coming soon"})})]}),"\n",(0,a.jsx)(n.h2,{id:"\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5b9a\u7fa9",children:"\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5b9a\u7fa9"}),"\n",(0,a.jsx)(n.p,{children:"\u4eba\u5de5\u77e5\u80fd\u3067\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u74b0\u5883\u3092\u8a8d\u8b58\u3057\u3001\u5224\u65ad\u3092\u4e0b\u3057\u3001\u7279\u5b9a\u306e\u76ee\u6a19\u307e\u305f\u306f\u76ee\u6a19\u30bb\u30c3\u30c8\u3092\u9054\u6210\u3059\u308b\u305f\u3081\u306e\u884c\u52d5\u3092\u53d6\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u305f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d7\u30ed\u30b0\u30e9\u30e0\u307e\u305f\u306f\u30b7\u30b9\u30c6\u30e0\u3092\u6307\u3057\u307e\u3059\u3002\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u81ea\u5f8b\u7684\u306b\u52d5\u4f5c\u3057\u3001\u3064\u307e\u308a\u3001\u4eba\u9593\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306b\u3088\u3063\u3066\u76f4\u63a5\u5236\u5fa1\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}),"\n",(0,a.jsx)(n.p,{children:"Flappy\u306e\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306fLLM\u306e\u591a\u76ee\u7684\u306a\u4f1d\u9001\u8def\u3068\u3057\u3066\u4f5c\u7528\u3057\u307e\u3059\u3002\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u30c7\u30fc\u30bf\u306e\u69cb\u9020\u5316\u3001\u5916\u90e8API\u306e\u547c\u3073\u51fa\u3057\u3001\u307e\u305f\u306fLLM\u304c\u751f\u6210\u3057\u305fPython\u30b3\u30fc\u30c9\u306e\u30b5\u30f3\u30c9\u30dc\u30c3\u30af\u30b9\u5316\u306a\u3069\u3001\u69d8\u3005\u306a\u30bf\u30b9\u30af\u3092\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u7d44\u307f\u5408\u308f\u305b\u3066\u51e6\u7406\u3059\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u786c\u76f4\u3057\u305f\u6b6f\u8eca\u3067\u306f\u306a\u304f\u3001\u52b9\u7387\u7684\u3067\u5b89\u5168\u306aLLM\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u9069\u5fdc\u3059\u308b\u67d4\u8edf\u306a\u30c4\u30fc\u30eb\u3067\u3059\u3002"}),"\n",(0,a.jsx)(n.h3,{id:"\u4e3b\u8981\u306a\u6982\u5ff5",children:"\u4e3b\u8981\u306a\u6982\u5ff5"}),"\n",(0,a.jsx)(n.h4,{id:"\u95a2\u6570",children:"\u95a2\u6570"}),"\n",(0,a.jsxs)(n.p,{children:["\u95a2\u6570\u306fFlappy\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u304a\u3051\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u57fa\u76e4\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u5b9a\u7fa9\u3068\u5229\u7528\u304c\u53ef\u80fd\u306a2\u3064\u306e\u4e3b\u8981\u306a\u95a2\u6570\u30bf\u30a4\u30d7\u3001",(0,a.jsx)(n.code,{children:"InvokeFunction"}),"\u3068",(0,a.jsx)(n.code,{children:"SythesizedFunction"}),"\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"InvokeFunction"}),"\u306f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u74b0\u5883\u3068\u5bfe\u8a71\u3059\u308b\u305f\u3081\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3001Langchain\u306eAgents\u306eTools\u306b\u985e\u4f3c\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u5165\u529b\u3068\u51fa\u529b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u5b9a\u7fa9\u3055\u308c\u3001\u305d\u306e\u69cb\u9020\u306fLanguage Learning Model (LLM)\u304c\u52b9\u7387\u7684\u306b\u5bfe\u8a71\u3059\u308b\u305f\u3081\u306b\u660e\u78ba\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u95a2\u6570\u304c\u30e6\u30fc\u30b6\u30fc\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3084\u4e16\u754c\u3068\u306e\u5bfe\u8a71\u306b\u304a\u3044\u3066\u679c\u305f\u3059\u5f79\u5272\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u306f\u3001\u52b9\u7387\u7684\u306a\u30bf\u30b9\u30af\u8a08\u753b\u306e\u305f\u3081\u306b\u91cd\u8981\u3067\u3059\u3002"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"SythesizedFunction"}),"\u306fLLM\u304c\u6f14\u3058\u308b\u95a2\u6570\u306e\u4e00\u7a2e\u3067\u3059\u3002\u305d\u306e\u8aac\u660e\u3068\u5165\u529b\u3068\u51fa\u529b\u306e\u69cb\u9020\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067\u3088\u304f\u3001LLM\u306f\u305d\u306e\u5f8c\u3001\u5b9a\u7fa9\u3055\u308c\u305f\u5f62\u5f0f\u3067\u5165\u529b\u3092\u51e6\u7406\u3057\u3001\u671f\u5f85\u3055\u308c\u308b\u5f62\u5f0f\u3067\u51fa\u529b\u3092\u751f\u6210\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u7279\u5fb4\u306f\u3001LLM\u304c\u69cb\u9020\u5316\u30c7\u30fc\u30bf\u306e\u62bd\u51fa\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u308a\u3001LLM\u304c\u69cb\u9020\u5316\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308b\u30b7\u30ca\u30ea\u30aa\u3067\u3001\u7279\u306b\u6709\u7528\u3067\u3059\u3002"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"\u30b3\u30fc\u30c9\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf",children:"\u30b3\u30fc\u30c9\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf"}),"\n",(0,a.jsx)(n.p,{children:"Flappy\u306e\u30b3\u30fc\u30c9\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u306f\u3001ChatGPT\u30b3\u30fc\u30c9\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u306e\u7b49\u4fa1\u306a\u4ee3\u66ff\u54c1\u3068\u3057\u3066\u6a5f\u80fd\u3057\u3001\u8a00\u8a9e\u30e2\u30c7\u30eb\u304cPython\u30b3\u30fc\u30c9\u3092\u901a\u3058\u3066\u8907\u96d1\u306a\u30e6\u30fc\u30b6\u30fc\u8981\u6c42\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002Flappy\u306e\u30b3\u30fc\u30c9\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u304c\u5e02\u5834\u306e\u4ed6\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5\u3068\u7570\u306a\u308b\u306e\u306f\u3001\u305d\u306e\u30b5\u30f3\u30c9\u30dc\u30c3\u30af\u30b9\u5316\u3055\u308c\u305f\u5b89\u5168\u6a5f\u80fd\u3067\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u672c\u756a\u74b0\u5883\u3067\u306e\u5c55\u958b\u306b\u5fc5\u8981\u306a\u53b3\u683c\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8981\u4ef6\u3092\u6e80\u305f\u3059\u3053\u3068\u304c\u78ba\u4fdd\u3055\u308c\u307e\u3059\u3002"}),"\n",(0,a.jsxs)(s.Z,{children:[(0,a.jsx)(l.Z,{value:"nodejs",label:"NodeJS (TypeScript) with ChatGPT",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { createFlappyAgent,  createInvokeFunction,  createSynthesizedFunction, createCodeInterpreter,  z } from '@pleisto/node-flappy'\n\nenum Verdict {\n  Innocent = 'Innocent',\n  Guilty = 'Guilty',\n  Unknown = 'Unknown'\n}\n\nconst MOCK_LAWSUIT_DATA =\n  \"As Alex Jones continues telling his Infowars audience about his money problems and pleads for them to buy his products, his own documents show life is not all that bad \u2014 his net worth is around $14 million and his personal spending topped $93,000 in July alone, including thousands of dollars on meals and entertainment. The conspiracy theorist and his lawyers file monthly financial reports in his personal bankruptcy case, and the latest one has struck a nerve with the families of victims of Sandy Hook Elementary School shooting. They're still seeking the $1.5 billion they won last year in lawsuits against Jones and his media company for repeatedly calling the 2012 massacre a hoax on his shows. \u201cIt is disturbing that Alex Jones continues to spend money on excessive household expenditures and his extravagant lifestyle when that money rightfully belongs to the families he spent years tormenting,\u201d said Christopher Mattei, a Connecticut lawyer for the families. \u201cThe families are increasingly concerned and will continue to contest these matters in court.\u201d In an Aug. 29 court filing, lawyers for the families said that if Jones doesn\u2019t reduce his personal expenses to a \u201creasonable\u201d level, they will ask the bankruptcy judge to bar him from \u201cfurther waste of estate assets,\u201d appoint a trustee to oversee his spending, or dismiss the bankruptcy case. On his Infowars show Tuesday, Jones said he\u2019s not doing anything wrong.\"\n\nconst agent = createFlappyAgent({\n  llm: chatGpt,\n  // Define your agent's features.\n  features: [\n    createCodeInterpreter(),\n    createSynthesizedFunction({\n      name: 'getMeta',\n      description: 'Extract meta data from a lawsuit full text.',\n      args: z.object({\n        lawsuit: z.string().describe('Lawsuit full text.')\n      }),\n      returnType: z.object({\n        verdict: z.nativeEnum(Verdict),\n        plaintiff: z.string(),\n        defendant: z.string(),\n        judgeOptions: z.array(z.string())\n      })\n    }),\n    createInvokeFunction({\n      name: 'getLatestLawsuitsByPlaintiff',\n      description: 'Get the latest lawsuits by plaintiff.',\n      args: z.object({\n        plaintiff: z.string(),\n        arg1: z.boolean().describe('For demo purpose. set to False'),\n        arg2: z.array(z.string()).describe('ignore it').optional()\n      }),\n      returnType: z.string(),\n      resolve: async args => {\n        // Do something\n        // e.g. query SQL database\n        console.debug('getLatestLawsuitsByPlaintiff called', args)\n        return MOCK_LAWSUIT_DATA\n      }\n    })\n  ]\n})\n"})})}),(0,a.jsx)(l.Z,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public class Law {\n  public static final String LAW_EXECUTE_PLAN_PROMPT = "Find the latest case with the plaintiff being families of victims and return its metadata.";\n  static final String MOCK_LAWSUIT_DATA =\n    "As Alex Jones continues telling his Infowars audience about his money problems and pleads for them to buy his products, his own documents show life is not all that bad \u2014 his net worth is around $14 million and his personal spending topped $93,000 in July alone, including thousands of dollars on meals and entertainment. The conspiracy theorist and his lawyers file monthly financial reports in his personal bankruptcy case, and the latest one has struck a nerve with the families of victims of Sandy Hook Elementary School shooting. They\'re still seeking the $1.5 billion they won last year in lawsuits against Jones and his media company for repeatedly calling the 2012 massacre a hoax on his shows. \u201cIt is disturbing that Alex Jones continues to spend money on excessive household expenditures and his extravagant lifestyle when that money rightfully belongs to the families he spent years tormenting,\u201d said Christopher Mattei, a Connecticut lawyer for the families. \u201cThe families are increasingly concerned and will continue to contest these matters in court.\u201d In an Aug. 29 court filing, lawyers for the families said that if Jones doesn\u2019t reduce his personal expenses to a \u201creasonable\u201d level, they will ask the bankruptcy judge to bar him from \u201cfurther waste of estate assets,\u201d appoint a trustee to oversee his spending, or dismiss the bankruptcy case. On his Infowars show Tuesday, Jones said he\u2019s not doing anything wrong.";\n  public static FlappyFeatureBase<?, ?> lawGetLatestLawsuitsByPlaintiff = new FlappyInvokeFunction(\n    "getLatestLawsuitsByPlaintiff",\n    "Get the latest lawsuits by plaintiff.",\n    GetLatestLawsuitsArguments.class,\n    String.class,\n    (a, agent, $completion) -> MOCK_LAWSUIT_DATA\n  );\n  public static FlappyFeatureBase<?, ?> lawGetMeta = new FlappySynthesizedFunction(\n    "getMeta",\n    "Extract meta data from a lawsuit full text.",\n    LawMetaArguments.class,\n    LawMetaReturn.class\n  );\n\n  public static void main(String[] args) throws ExecutionException, InterruptedException {\n    Dotenv dotenv = Dotenv.load();\n    ChatGPT llm = new ChatGPT(new ChatGPT.ChatGPTConfig(null, dotenv.get("OPENAI_TOKEN"), dotenv.get("OPENAI_API_BASE")));\n\n    FlappyBaseAgent agent = new FlappyBaseAgent(\n      llm, Arrays.asList(lawGetMeta, lawGetLatestLawsuitsByPlaintiff)\n    );\n  }\n\n  public enum Verdict {\n    Innocent, Guilty, Unknown\n  }\n\n  public static class LawMetaReturn {\n    @FlappyField\n    Verdict verdict;\n\n    @FlappyField\n    String plaintiff;\n\n    @FlappyField\n    String defendant;\n\n    @FlappyField\n    List<String> judgeOptions;\n\n    public Verdict getVerdict() {\n      return verdict;\n    }\n\n    public void setVerdict(Verdict verdict) {\n      this.verdict = verdict;\n    }\n\n    public String getPlaintiff() {\n      return plaintiff;\n    }\n\n    public void setPlaintiff(String plaintiff) {\n      this.plaintiff = plaintiff;\n    }\n\n    public String getDefendant() {\n      return defendant;\n    }\n\n    public void setDefendant(String defendant) {\n      this.defendant = defendant;\n    }\n\n    public List<String> getJudgeOptions() {\n      return judgeOptions;\n    }\n\n    public void setJudgeOptions(List<String> judgeOptions) {\n      this.judgeOptions = judgeOptions;\n    }\n  }\n\n  static class GetLatestLawsuitsArguments {\n    @FlappyField\n    String plaintiff;\n\n    @FlappyField(description = "For demo purpose. set to False")\n    Boolean arg1;\n\n    @FlappyField(description = "ignore it", optional = true)\n    List<String> arg2 = null;\n\n    public String getPlaintiff() {\n      return plaintiff;\n    }\n\n    public void setPlaintiff(String plaintiff) {\n      this.plaintiff = plaintiff;\n    }\n\n    public Boolean getArg1() {\n      return arg1;\n    }\n\n    public void setArg1(Boolean arg1) {\n      this.arg1 = arg1;\n    }\n\n    public List<String> getArg2() {\n      return arg2;\n    }\n\n    public void setArg2(List<String> arg2) {\n      this.arg2 = arg2;\n    }\n  }\n\n  static class LawMetaArguments {\n    @FlappyField(description = "Lawsuit full text.")\n    String lawsuit;\n\n    public String getLawsuit() {\n      return lawsuit;\n    }\n\n    public void setLawsuit(String lawsuit) {\n      this.lawsuit = lawsuit;\n    }\n  }\n}\n'})})}),(0,a.jsx)(l.Z,{value:"kotlin",label:"Kotlin",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'import flappy.FlappyBaseAgent\nimport flappy.annotations.FlappyField\nimport flappy.features.FlappyInvokeFunction\nimport flappy.features.FlappySynthesizedFunction\nimport flappy.llms.ChatGPT\nimport io.github.cdimascio.dotenv.dotenv\n\nenum class Verdict {\n  Innocent, Guilty, Unknown\n}\n\nconst val MOCK_LAWSUIT_DATA =\n  """As Alex Jones continues telling his Infowars audience about his money problems and pleads for them to buy his products, his own documents show life is not all that bad \u2014 his net worth is around $14 million and his personal spending topped $93,000 in July alone, including thousands of dollars on meals and entertainment. The conspiracy theorist and his lawyers file monthly financial reports in his personal bankruptcy case, and the latest one has struck a nerve with the families of victims of Sandy Hook Elementary School shooting. They\'re still seeking the $1.5 billion they won last year in lawsuits against Jones and his media company for repeatedly calling the 2012 massacre a hoax on his shows. \u201cIt is disturbing that Alex Jones continues to spend money on excessive household expenditures and his extravagant lifestyle when that money rightfully belongs to the families he spent years tormenting,\u201d said Christopher Mattei, a Connecticut lawyer for the families. \u201cThe families are increasingly concerned and will continue to contest these matters in court.\u201d In an Aug. 29 court filing, lawyers for the families said that if Jones doesn\u2019t reduce his personal expenses to a \u201creasonable\u201d level, they will ask the bankruptcy judge to bar him from \u201cfurther waste of estate assets,\u201d appoint a trustee to oversee his spending, or dismiss the bankruptcy case. On his Infowars show Tuesday, Jones said he\u2019s not doing anything wrong."""\n\nclass LawMetaArguments(\n  @FlappyField(description = "Lawsuit full text.")\n  val lawsuit: String\n)\n\nclass LawMetaReturn(\n  @FlappyField\n  val verdict: Verdict,\n\n  @FlappyField\n  val plaintiff: String,\n\n  @FlappyField\n  val defendant: String,\n\n  @FlappyField\n  val judgeOptions: List<String>\n)\n\nval lawGetMeta = FlappySynthesizedFunction(\n  name = "getMeta",\n  description = "Extract meta data from a lawsuit full text.",\n  args = LawMetaArguments::class.java,\n  returnType = LawMetaReturn::class.java,\n)\n\nclass GetLatestLawsuitsArguments(\n  @FlappyField\n  val plaintiff: String,\n\n  @FlappyField(description = "For demo purpose. set to False")\n  val arg1: Boolean,\n\n  @FlappyField(description = "ignore it", optional = true)\n  val arg2: List<String>?\n)\n\n\nval lawGetLatestLawsuitsByPlaintiff = FlappyInvokeFunction(\n  name = "getLatestLawsuitsByPlaintiff",\n  description = "Get the latest lawsuits by plaintiff.",\n  args = GetLatestLawsuitsArguments::class.java,\n  returnType = String::class.java,\n  invoker = { _, _ -> MOCK_LAWSUIT_DATA }\n)\n\nconst val LAW_EXECUTE_PLAN_PROMPT =\n  "Find the latest case with the plaintiff being families of victims and return its metadata."\n\n\nsuspend fun main(args: Array<String>) {\n  val dotenv = dotenv()\n\n  val chatGPT = ChatGPT(\n    ChatGPT.ChatGPTConfig(token = dotenv["OPENAI_TOKEN"], host = dotenv["OPENAI_API_BASE"])\n  )\n\n  val agent = FlappyBaseAgent(\n    maxRetry = 2,\n    inferenceLLM = chatGPT,\n    features = listOf(lawGetMeta, lawGetLatestLawsuitsByPlaintiff)\n  )\n}\n'})})}),(0,a.jsx)(l.Z,{value:"csharp",label:"C#",default:!0,children:(0,a.jsx)(n.p,{children:"Coming soon"})})]}),"\n",(0,a.jsx)(n.h2,{id:"call-your-agent",children:"Call your agent"}),"\n",(0,a.jsx)(n.h3,{id:"create-and-execute-a-action-plan",children:"Create and execute a action plan"}),"\n",(0,a.jsx)(n.p,{children:"Augmented Language Models (ALMs) blend the reasoning capabilities of Large Language Models (LLMs) with tools that allow for knowledge retrieval and action execution. Existing ALM systems trigger LLM thought processes while pulling observations from these tools in an interleaved fashion. Specifically, an LLM reasons to call an external tool, gets halted to fetch the tool's response, and then decides the next action based on all preceding response tokens. Such a paradigm, though straightforward and easy to implement, often leads to huge computation complexity from redundant prompts and repeated execution."}),"\n",(0,a.jsxs)(n.p,{children:["Flappy uses ",(0,a.jsx)(n.a,{href:"https://arxiv.org/abs/2305.18323",children:"ReWOO"})," instead of ",(0,a.jsx)(n.a,{href:"https://arxiv.org/abs/2210.03629",children:"ReAct"})," to minimize LLM token output, thereby reducing costs. Building on this, the agent is equipped to autonomously devise a plan based on the user's prompt. This involves determining the sequence of functions that need to be invoked to fulfill the given prompt. The execution then proceeds according to this formulated plan, further optimizing the efficiency of our system."]}),"\n",(0,a.jsxs)(s.Z,{children:[(0,a.jsx)(l.Z,{value:"nodejs",label:"NodeJS (TypeScript) with ChatGPT",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"agent.executePlan('Find the latest case with the plaintiff being families of victims and return its metadata.')\n"})})}),(0,a.jsx)(l.Z,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Future<LawMetaReturn> future = lawAgent.executePlanAsync(LAW_EXECUTE_PLAN_PROMPT);\n"})})}),(0,a.jsx)(l.Z,{value:"kotlin",label:"Kotlin",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"lawAgent.use {\n  it.executePlan<LawMetaReturn>(LAW_EXECUTE_PLAN_PROMPT)\n}\n"})})}),(0,a.jsx)(l.Z,{value:"csharp",label:"C#",default:!0,children:(0,a.jsx)(n.p,{children:"Coming soon"})})]}),"\n",(0,a.jsx)(n.h3,{id:"call-synthesized-function-directly",children:"Call synthesized function directly"}),"\n",(0,a.jsx)(n.p,{children:"You can also call synthesized function directly without executing a action plan."}),"\n",(0,a.jsxs)(s.Z,{children:[(0,a.jsx)(l.Z,{value:"nodejs",label:"NodeJS (TypeScript) with ChatGPT",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"agent.callFeature('getMeta', {lawsuit: MOCK_LAWSUIT_DATA})\n"})})}),(0,a.jsx)(l.Z,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Future<String> future = agent.callFeatureAsync("getMeta", LAW_EXECUTE_PLAN_PROMPT);\n'})})}),(0,a.jsx)(l.Z,{value:"kotlin",label:"Kotlin",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'agent.use {\n  val future = it.callFeature<String>("getMeta", LAW_EXECUTE_PLAN_PROMPT)\n}\n'})})}),(0,a.jsx)(l.Z,{value:"csharp",label:"C#",default:!0,children:(0,a.jsx)(n.p,{children:"Coming soon"})})]}),"\n",(0,a.jsx)(n.h3,{id:"call-code-interpreter",children:"Call Code Interpreter"}),"\n",(0,a.jsx)(n.p,{children:"Code Interpreter currently needs to be called directly. We are working on a better way to integrate it with the agent."}),"\n",(0,a.jsxs)(s.Z,{children:[(0,a.jsx)(l.Z,{value:"nodejs",label:"NodeJS (TypeScript) with ChatGPT",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"agent.executePlan(\n  'There are some rabbits and chickens in a barn. What is the number of chickens if there are 396 legs  and 150 heads in the barn?'\n)\n\n// or call feature directly:\n\nagent.callFeature('pythonSandbox', {\n  code: 'There are some rabbits and chickens in a barn. What is the number of chickens if there are 396 legs and 150 heads in the barn?'\n})\n"})})}),(0,a.jsx)(l.Z,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Future<String> future = agent.executePlanAsync("There are some rabbits and chickens in a barn. What is the number of chickens if there are 396 legs and 150 heads in the barn?");\n'})})}),(0,a.jsx)(l.Z,{value:"kotlin",label:"Kotlin",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'agent.use {\n  it.executePlan<String>("There are some rabbits and chickens in a barn. What is the number of chickens if there are 396 legs and 150 heads in the barn?")\n}\n'})})}),(0,a.jsx)(l.Z,{value:"csharp",label:"C#",default:!0,children:(0,a.jsx)(n.p,{children:"Coming soon"})})]})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},1670:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>l});var a=t(7378);const i={},s=a.createContext(i);function l(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);