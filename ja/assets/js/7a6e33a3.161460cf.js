"use strict";(self.webpackChunk_pleisto_flappy_docs=self.webpackChunk_pleisto_flappy_docs||[]).push([[932],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),f=i,h=p["".concat(o,".").concat(f)]||p[f]||d[f]||r;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=f;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[p]="string"==typeof e?e:i,l[1]=s;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9798:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7378),i=n(7140);const r={tabItem:"tabItem_wHwb"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r.tabItem,l),hidden:n},t)}},3930:(e,t,n)=>{n.d(t,{Z:()=>k});var a=n(5773),i=n(7378),r=n(7140),l=n(3457),s=n(3620),o=n(654),u=n(784),c=n(1819);function p(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function d(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function f(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=d(e),[l,s]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[o,u]=h({queryString:n,groupId:a}),[p,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,c.Nk)(n);return[a,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),m=(()=>{const e=o??p;return f({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{m&&s(m)}),[m]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!f({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),g(e)}),[u,g,r]),tabValues:r}}var m=n(6457);const y={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};function b(e){let{className:t,block:n,selectedValue:s,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==s&&(p(t),o(a))},f=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:f,onClick:d},l,{className:(0,r.Z)("tabs__item",y.tabItem,l?.className,{"tabs__item--active":s===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=g(e);return i.createElement("div",{className:(0,r.Z)("tabs-container",y.tabList)},i.createElement(b,(0,a.Z)({},e,t)),i.createElement(v,(0,a.Z)({},e,t)))}function k(e){const t=(0,m.Z)();return i.createElement(w,(0,a.Z)({key:String(t)},e))}},8656:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var a=n(5773),i=(n(7378),n(5318)),r=n(3930),l=n(9798);const s={sidebar_position:3},o="Synthesized Function",u={unversionedId:"sythesized-function",id:"sythesized-function",title:"Synthesized Function",description:"A SynthesizedFunction is a key functionality offered within the Flappy. This powerful feature interacts with Large Language Models (LLMs) and requires only the definition of its description, inputs, and outputs, significantly simplifying the process of AI integration in your projects.",source:"@site/docs/sythesized-function.mdx",sourceDirName:".",slug:"/sythesized-function",permalink:"/ja/docs/sythesized-function",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sythesized-function.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docSidebar",previous:{title:"\u306f\u3058\u3081\u306b",permalink:"/ja/docs/quick-start"},next:{title:"Invoke Function",permalink:"/ja/docs/invoke-function"}},c={},p=[{value:"Usage",id:"usage",level:2},{value:"Benefits",id:"benefits",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Credits",id:"credits",level:2}],d={toc:p},f="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(f,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"synthesized-function"},"Synthesized Function"),(0,i.kt)("p",null,"A SynthesizedFunction is a key functionality offered within the Flappy. This powerful feature interacts with Large Language Models (LLMs) and requires only the definition of its description, inputs, and outputs, significantly simplifying the process of AI integration in your projects."),(0,i.kt)("p",null,"SynthesizedFunction is designed to delegate the execution logic to the underlying LLM, such as GPT-3.5 Turbo. This approach allows developers to describe what they want the function to achieve, leaving the execution details to the LLM."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Creating a SynthesizedFunction involves specifying a description, along with the structures of the inputs and outputs. These definitions can be made using your preferred programming language, enhancing ease-of-use and accessibility. Flappy then parses these definitions using Abstract Syntax Tree (AST) parsing to transform them into a JSON Schema schema for machine readability and interoperability."),(0,i.kt)("p",null,"Here's a typical example of a SynthesizedFunction:"),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"nodejs",label:"NodeJS (TypeScript)",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { createSynthesizedFunction, z } from '@pleisto/node-flappy'\n\ncreateSynthesizedFunction({\n  name: 'getMeta',\n  description: 'Extract meta data from a lawsuit full text.',\n  args: z.object({\n    lawsuit: z.string().describe('Lawsuit full text.')\n  }),\n  returnType: z.object({\n    verdict: z.nativeEnum(Verdict),\n    plaintiff: z.string(),\n    defendant: z.string(),\n    judgeOptions: z.array(z.string())\n  })\n})\n"))),(0,i.kt)(l.Z,{value:"java",label:"Java",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'  public static FlappyFunctionBase<?, ?> lawGetMeta = new FlappySynthesizedFunction(\n    "getMeta",\n    "Extract meta data from a lawsuit full text.",\n    LawMetaArguments.class,\n    LawMetaReturn.class\n  );\n\n  static class LawMetaArguments {\n    @FlappyField(description = "Lawsuit full text.")\n    String lawsuit;\n\n    public String getLawsuit() {\n      return lawsuit;\n    }\n\n    public void setLawsuit(String lawsuit) {\n      this.lawsuit = lawsuit;\n    }\n  }\n\n  public static class LawMetaReturn {\n    @FlappyField\n    Verdict verdict;\n\n    @FlappyField\n    String plaintiff;\n\n    @FlappyField\n    String defendant;\n\n    @FlappyField\n    List<String> judgeOptions;\n\n    public Verdict getVerdict() {\n      return verdict;\n    }\n\n    public void setVerdict(Verdict verdict) {\n      this.verdict = verdict;\n    }\n\n    public String getPlaintiff() {\n      return plaintiff;\n    }\n\n    public void setPlaintiff(String plaintiff) {\n      this.plaintiff = plaintiff;\n    }\n\n    public String getDefendant() {\n      return defendant;\n    }\n\n    public void setDefendant(String defendant) {\n      this.defendant = defendant;\n    }\n\n    public List<String> getJudgeOptions() {\n      return judgeOptions;\n    }\n\n    public void setJudgeOptions(List<String> judgeOptions) {\n      this.judgeOptions = judgeOptions;\n    }\n  }\n'))),(0,i.kt)(l.Z,{value:"kotlin",label:"Kotlin",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'val lawGetMeta = FlappySynthesizedFunction(\n  name = "getMeta",\n  description = "Extract meta data from a lawsuit full text.",\n  args = LawMetaArguments::class.java,\n  returnType = LawMetaReturn::class.java,\n)\n\nclass LawMetaArguments(\n  @FlappyField(description = "Lawsuit full text.")\n  val lawsuit: String\n)\n\nclass LawMetaReturn(\n  @FlappyField\n  val verdict: Verdict,\n\n  @FlappyField\n  val plaintiff: String,\n\n  @FlappyField\n  val defendant: String,\n\n  @FlappyField\n  val judgeOptions: List<String>\n)\n'))),(0,i.kt)(l.Z,{value:"csharp",label:"C#",default:!0,mdxType:"TabItem"},"Coming soon")),(0,i.kt)("p",null,"In this scenario, the getMeta function is aimed at extracting metadata from a lawsuit text. The function takes a lawsuit text string as input and returns an object containing the verdict, plaintiff, defendant, and judge options."),(0,i.kt)("h2",{id:"benefits"},"Benefits"),(0,i.kt)("p",null,"The SynthesizedFunction presents several key advantages:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Simplicity: Developers need only define the function's purpose, inputs, and outputs, freeing them from the complexities of implementation details."),(0,i.kt)("li",{parentName:"ol"},"Flexibility: The feature allows for defining intricate functions without explicitly programming the logic, lending to robust design possibilities."),(0,i.kt)("li",{parentName:"ol"},"Efficiency: SynthesizedFunction capitalizes on AI's power to handle complex data processing tasks, enhancing productivity.")),(0,i.kt)("p",null,"By harnessing SynthesizedFunction in the Flappy SDK, developers can more effectively incorporate AI into their applications, achieving new levels of reliability and efficiency."),(0,i.kt)("h2",{id:"error-handling"},"Error Handling"),(0,i.kt)("p",null,"The SynthesizedFunction feature is designed to be robust and reliable. Flappy will validate the LLM's response and try to repair it if it is invalid. If the response is still invalid, Flappy will throw an error."),(0,i.kt)("h2",{id:"credits"},"Credits"),(0,i.kt)("p",null,"This feature is inspired by the Microsoft's ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/microsoft/TypeChat"},"TypeChat")," project."))}h.isMDXComponent=!0}}]);